% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/capture_check_cnd.R
\name{capture_check_cnd}
\alias{capture_check_cnd}
\title{Capture a condition of the result of validation check.}
\usage{
capture_check_cnd(
  check,
  file_path,
  msg_subject,
  msg_attribute,
  msg_verbs = c("is", "must be"),
  error = FALSE,
  details = NULL,
  ...
)
}
\arguments{
\item{check}{logical, the result of a validation check. If \code{check} is \code{FALSE},
validation has failed. If \code{check} is \code{TRUE}, validation has succeeded.}

\item{file_path}{character string. Path to the file being validated. Must be
the relative path to the hub's \code{model-output} (or equivalent) directory.}

\item{msg_subject}{character string. The subject of the validation.}

\item{msg_attribute}{character string. The attribute of subject being validated.}

\item{msg_verbs}{character vector of length 2. The verbs describing the state
of the attribute in relation to the validation subject. The first element describes
the state when validation succeeds, the second element, when validation fails.}

\item{error}{logical. In the case of validation failure, whether the function
should return an object of class \verb{<error/check_error>} (\code{TRUE}) or
\verb{<error/check_failure>} (\code{FALSE}, default).}

\item{details}{further details to be appended to the output message.}

\item{...}{<\link[rlang:dyn-dots]{dynamic}> Named data fields stored inside
the condition object.}
}
\value{
Depending on whether validation has succeeded and the value
of the \code{error} argument, one of:
\itemize{
\item \verb{<message/check_success>} condition class object.
\item \verb{<error/check_failure>} condition class object.
\item \verb{<error/check_error>} condition class object.
}

Returned object also inherits from subclass \verb{<hub_check>}.
}
\description{
Capture a condition of the result of validation check.
}
\details{
Arguments \code{msg_subject}, \code{msg_attribute}, \code{msg_verbs} and \code{details}
accept text that can interpreted and formatted by \code{\link[cli:format_inline]{cli::format_inline()}}.
}
\examples{
capture_check_cnd(
  check = TRUE, file_path = "test/file.csv",
  msg_subject = "{.var round_id}", msg_attribute = "valid.", error = FALSE
)
capture_check_cnd(
  check = FALSE, file_path = "test/file.csv",
  msg_subject = "{.var round_id}", msg_attribute = "valid.", error = FALSE,
  details = "Must be one of 'A' or 'B', not 'C'"
)
capture_check_cnd(
  check = FALSE, file_path = "test/file.csv",
  msg_subject = "{.var round_id}", msg_attribute = "valid.", error = TRUE,
  details = "Must be one of {.val {c('A', 'B')}}, not {.val C}"
)
}
