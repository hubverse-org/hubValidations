% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/submission_tmpl.R
\name{submission_tmpl}
\alias{submission_tmpl}
\title{Create a model output submission file template}
\usage{
submission_tmpl(
  hub_con,
  config_tasks,
  round_id,
  required_vals_only = FALSE,
  complete_cases_only = TRUE
)
}
\arguments{
\item{hub_con}{A \verb{⁠<hub_connection}>⁠ class object.}

\item{config_tasks}{a list version of the content's of a hub's \code{tasks.json}
config file, accessed through the \code{"config_tasks"} attribute of a \verb{<hub_connection>}
object or function \code{\link[hubUtils:read_config]{hubUtils::read_config()}}.}

\item{round_id}{Character string. Round identifier. If the round is set to
\code{round_id_from_variable: true}, IDs are values of the task ID defined in the round's
\code{round_id} property of \code{config_tasks}.
Otherwise should match round's \code{round_id} value in config. Ignored if hub
contains only a single round.}

\item{required_vals_only}{Logical. Whether to return only combinations of
Task ID and related output type ID required values.}

\item{complete_cases_only}{Logical. If \code{TRUE} (default) and \code{required_vals_only = TRUE},
only rows with complete cases of combinations of required values are returned.
If \code{FALSE}, rows with incomplete cases of combinations of required values
are included in the output.}
}
\value{
a tibble template containing an expanded grid of valid task ID and
output type ID value combinations for a given submission round
and output type.
If \code{required_vals_only = TRUE}, values are limited to the combination of required
values only.
}
\description{
Create a model output submission file template
}
\details{
For task IDs or output_type_ids where all values are optional, by default, columns
are included as columns of \code{NA}s when \code{required_vals_only = TRUE}.
When such columns exist, the function returns a tibble with zero rows, as no
complete cases of required value combinations exists.
\emph{(Note that determination of complete cases does excludes valid \code{NA}
\code{output_type_id} values in \code{"mean"} and \code{"median"} output types).}
To return a template of incomplete required cases, which includes \code{NA} columns, use
\code{complete_cases_only = FALSE}.

When sample output types are included in the output, the \code{output_type_id}
column contains example sample indexes which are useful for identifying the
compound task ID structure of multivariate sampling distributions in particular,
i.e. which combinations of task ID values represent individual samples.

When a round is set to \code{round_id_from_variable: true},
the value of the task ID from which round IDs are derived (i.e. the task ID
specified in \code{round_id} property of \code{config_tasks}) is set to the value of the
\code{round_id} argument in the returned output.
}
\examples{
hub_con <- hubData::connect_hub(
  system.file("testhubs/flusight", package = "hubUtils")
)
submission_tmpl(hub_con, round_id = "2023-01-02")
submission_tmpl(
  hub_con,
  round_id = "2023-01-02",
  required_vals_only = TRUE
)
submission_tmpl(
  hub_con,
  round_id = "2023-01-02",
  required_vals_only = TRUE,
  complete_cases_only = FALSE
)
# Specifying a round in a hub with multiple rounds
hub_con <- hubData::connect_hub(
  system.file("testhubs/simple", package = "hubUtils")
)
submission_tmpl(hub_con, round_id = "2022-10-01")
submission_tmpl(hub_con, round_id = "2022-10-29")
submission_tmpl(hub_con,
  round_id = "2022-10-29",
  required_vals_only = TRUE
)
submission_tmpl(hub_con,
  round_id = "2022-10-29",
  required_vals_only = TRUE,
  complete_cases_only = FALSE
)
# Hub with sample output type
config_tasks <- hubUtils::read_config_file(system.file("config", "tasks.json",
  package = "hubValidations"
))
submission_tmpl(
  config_tasks = config_tasks,
  round_id = "2022-12-26"
)
# Hub with sample output type and compound task ID structure
config_tasks <- hubUtils::read_config_file(system.file("config", "tasks-comp-tid.json",
  package = "hubValidations"
))
submission_tmpl(
  config_tasks = config_tasks,
  round_id = "2022-12-26"
)
}
